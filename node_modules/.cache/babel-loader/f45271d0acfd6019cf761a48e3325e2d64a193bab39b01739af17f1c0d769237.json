{"ast":null,"code":"var _jsxFileName = \"/home/sclab/renewal/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [context1, setContext1] = useState(null);\n  const [context2, setContext2] = useState(null);\n  const [drawing, setDrawing] = useState(false);\n  const [dammy, setDammy] = useState(0);\n  let posX = 0;\n  let posY = 0;\n  let count = 0;\n  let array1 = new Array(1152);\n  let array2 = new Array(1152);\n  for (var i = 0; i < 1152; i++) {\n    array1[i] = 100;\n    array2[i] = 200;\n  }\n  const [linesY, setLinesY] = useState(array1);\n  const startDraw = _ref => {\n    let {\n      nativeEvent\n    } = _ref;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    for (var i = 0; i < 1152; i++) {\n      array1[i] = linesY[i];\n    }\n    posX = offsetX;\n    posY = offsetY;\n    array1[posX] = posY;\n    setDrawing(true);\n  };\n  const draw = _ref2 => {\n    let {\n      nativeEvent\n    } = _ref2;\n    if (!drawing) {\n      return;\n    }\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    array1[offsetX] = offsetY;\n    let difference = Number(Math.abs(offsetX - posX));\n    count = difference;\n    if (offsetX > posX) {\n      for (var i = 1; i < difference; i++) {\n        let temp = Number(posY + (offsetY - posY) * (posX + i - posX) / (offsetX - posX));\n        array1[posX + i] = temp;\n      }\n    } else {\n      for (var i = 1; i < difference; i++) {\n        let temp = Number(posY + (offsetY - posY) * (posX - i - posX) / (offsetX - posX));\n        array1[posX - i] = temp;\n      }\n    }\n    setLinesY(array1);\n    context1.clearRect(0, 1, 1151, 278);\n    context1.beginPath();\n    for (var i = 0; i < 1151; i++) {\n      context1.moveTo(i, linesY[i]); //盛り上がり度曲線を描く．\n      context1.lineTo(i + 1, linesY[i + 1]);\n    }\n    context1.stroke();\n    context1.closePath();\n    setLinesY(array1);\n    posX = Math.floor(offsetX);\n    posY = Math.floor(offsetY);\n  };\n  const stopDraw = () => {\n    setLinesY(array1);\n    setDrawing(false);\n  };\n  useEffect(() => {\n    const canvas1 = document.getElementById('canvas1');\n    const ctx1 = canvas1.getContext('2d');\n    const canvas2 = document.getElementById('canvas2');\n    const ctx2 = canvas2.getContext('2d');\n    setContext1(ctx1);\n    setContext2(ctx2);\n    ctx1.fillStyle = 'green';\n    ctx1.fillStyle = 'black';\n    ctx1.strokeRect(0, 0, canvas1.width, canvas1.height);\n    ctx2.fillStyle = 'green';\n    ctx2.fillRect(10, 10, 150, 100);\n    ctx1.beginPath();\n    for (var i = 0; i < 1152; i++) {\n      ctx1.moveTo(i, 200); //盛り上がり度曲線を描く\n      ctx1.lineTo(i + 1, 200);\n    }\n    ctx1.stroke();\n    ctx1.closePath();\n  }, [dammy]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"count: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        id: \"count\",\n        children: array1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"asdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: \"1152\",\n      height: \"280\",\n      id: \"canvas1\",\n      onMouseDown: startDraw,\n      onMouseUp: stopDraw,\n      onMouseMove: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"qwer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: \"1280\",\n      height: \"720\",\n      id: \"canvas2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"qp7Bj66xL8fYAVwhHULXJshD4xU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useEffect","useRef","useState","App","context1","setContext1","context2","setContext2","drawing","setDrawing","dammy","setDammy","posX","posY","count","array1","Array","array2","i","linesY","setLinesY","startDraw","nativeEvent","offsetX","offsetY","draw","difference","Number","Math","abs","temp","clearRect","beginPath","moveTo","lineTo","stroke","closePath","floor","stopDraw","canvas1","document","getElementById","ctx1","getContext","canvas2","ctx2","fillStyle","strokeRect","width","height","fillRect"],"sources":["/home/sclab/renewal/frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useRef, useState } from 'react';\n\nfunction App() {\n  const [context1,setContext1] = useState(null)\n  const [context2,setContext2] = useState(null)\n  const [drawing, setDrawing] = useState(false);\n  const [dammy, setDammy] = useState(0);\n  let posX = 0;\n  let posY = 0;\n  let count = 0;\n  let array1 = new Array(1152);\n  let array2 = new Array(1152);\n  for (var i = 0; i < 1152; i++) {\n    array1[i] = 100;\n    array2[i] = 200;\n  }\n  const [linesY, setLinesY] = useState(array1)\n  \n  const startDraw = ({ nativeEvent }) => {\n    const { offsetX, offsetY } = nativeEvent;\n    for(var i = 0; i < 1152; i++) {\n      array1[i] = linesY[i];\n    }\n\t  posX = offsetX;\n    posY = offsetY;\n    array1[posX] = posY;\n    setDrawing(true);\n  };\n\n  const draw = ({ nativeEvent }) => {\n    if(!drawing){return;}\n    \n\n    const { offsetX, offsetY } = nativeEvent;\n    array1[offsetX] = offsetY;\n    let difference = Number(Math.abs(offsetX - posX));\n    count = difference;\n\t\tif(offsetX > posX) {\n\t\t    for(var i = 1; i < difference; i++) {\n          let temp = Number((posY+(offsetY-posY) * (posX + i - posX) / (offsetX - posX)));\n\t\t\t    array1[posX + i] = temp;\n\t\t    }\n\t\t}else {\n\t\t    for(var i = 1; i < difference; i++) {\n          let temp = Number((posY+(offsetY-posY) * (posX - i - posX) / (offsetX - posX)));\n\t\t\t    array1[posX - i] = temp;\n\t\t    }\n\t\t}\n    setLinesY(array1)\n    context1.clearRect(0,1,1151,278);\n    context1.beginPath();\n    for(var i = 0; i < 1151; i++) {\t\t\n      context1.moveTo(i,linesY[i]);          //盛り上がり度曲線を描く．\n      context1.lineTo(i+1,linesY[i+1]);\n    }\n    context1.stroke();\n    context1.closePath();\n    setLinesY(array1);\n    posX = Math.floor(offsetX);\n\t  posY = Math.floor(offsetY);\n\n  };\n\n  const stopDraw = () => {\n    setLinesY(array1);\n    setDrawing(false);\n  };\n\n  useEffect(()=>{\n    const canvas1 = document.getElementById('canvas1');\n    const ctx1 = canvas1.getContext('2d');\n  \n    const canvas2 = document.getElementById('canvas2');\n    const ctx2 = canvas2.getContext('2d');\n    setContext1(ctx1);\n    setContext2(ctx2);\n    ctx1.fillStyle = 'green';\n    ctx1.fillStyle = 'black';\n    ctx1.strokeRect(0,0,canvas1.width,canvas1.height);\n    ctx2.fillStyle = 'green';\n    ctx2.fillRect(10, 10, 150, 100);\n\n    ctx1.beginPath();\n    for(var i = 0; i < 1152; i++) {\n\t    ctx1.moveTo(i,200);      //盛り上がり度曲線を描く\n\t    ctx1.lineTo(i+1,200);\n\t  }\n    ctx1.stroke();\n\t  ctx1.closePath();\n  }, [dammy]);\n\n  return (\n    <>\n      <p>count: <code id='count'>{array1}</code></p>\n      <h1>asdf</h1>\n      <canvas width=\"1152\" height=\"280\" id=\"canvas1\" \n        onMouseDown={startDraw}\n        onMouseUp={stopDraw}\n        onMouseMove={draw}>\n      </canvas>\n      <h1>qwer</h1>\n      <canvas width=\"1280\" height=\"720\" id=\"canvas2\"></canvas>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}