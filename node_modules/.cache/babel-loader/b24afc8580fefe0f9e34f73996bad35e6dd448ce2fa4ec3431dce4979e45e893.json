{"ast":null,"code":"var _jsxFileName = \"/home/sclab/renewal/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport useSound from 'use-sound';\nimport Sound from \"./song0.wav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [context1, setContext1] = useState(null);\n  const [audio, setAudio] = useState(null);\n  const [context2, setContext2] = useState(null);\n  const [drawing, setDrawing] = useState(false);\n  const [dammy, setDammy] = useState(0);\n  const [count, setCount] = useState(0);\n  const [numberi, setNumberi] = useState(0);\n  const [temps, setTemp] = useState(0);\n  const [posX, setPosX] = useState(0);\n  const [posY, setPosY] = useState(0);\n  const [linesY, setLinesY] = useState([]);\n  let [play, {\n    stop,\n    pause\n  }] = useSound(Sound);\n  const startDraw = _ref => {\n    let {\n      nativeEvent\n    } = _ref;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    setPosX(Math.floor(offsetX));\n    setPosY(Math.floor(offsetY));\n    setLinesY(linesY.map((pos, index) => index === posX ? posY : pos));\n    setDrawing(true);\n  };\n  const draw = _ref2 => {\n    let {\n      nativeEvent\n    } = _ref2;\n    if (!drawing) {\n      return;\n    }\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    let array = new Array(1152);\n    for (var i = 0; i < 1152; i++) {\n      array[i] = linesY[i];\n    }\n    array[offsetX] = offsetY;\n    setLinesY(linesY.map((pos, index) => index === offsetX ? offsetY : pos));\n    let difference = Math.floor(Math.abs(offsetX - posX));\n    if (offsetX > posX) {\n      for (var i = 1; i < difference; i++) {\n        array[posX + i] = Math.floor(posY + (offsetY - posY) * (posX + i - posX) / (offsetX - posX));\n      }\n    } else {\n      for (var i = 1; i < difference; i++) {\n        array[posX - i] = Math.floor(posY + (offsetY - posY) * (posX - i - posX) / (offsetX - posX));\n      }\n    }\n    setLinesY([...array]);\n    context1.clearRect(0, 1, 1151, 278);\n    context1.beginPath();\n    for (var i = 0; i < 1151; i++) {\n      context1.moveTo(i, linesY[i]); //盛り上がり度曲線を描く．\n      context1.lineTo(i + 1, linesY[i + 1]);\n    }\n    context1.stroke();\n    context1.closePath();\n    setPosX(Math.floor(offsetX));\n    setPosY(Math.floor(offsetY));\n  };\n  const stopDraw = () => {\n    setDrawing(false);\n  };\n  const clickRect = _ref3 => {\n    let {\n      nativeEvent\n    } = _ref3;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    let posRectX = Math.floor(offsetX / 36);\n    let posRectY = Math.floor(offsetY / 50);\n    context2.lineWidth = 6;\n    context2.strokeRect(36 * posRectX, 50 * posRectY, 36, 50);\n    context2.lineWidth = 1;\n    let newCount = posRectX + posRectY;\n    setCount(newCount);\n  };\n  const playMusic = () => {\n    const url = \"http://127.0.0.1:5000/projects/0/songs/0/wav\";\n    axios.get(url, {\n      data: \"data\",\n      dataType: \"binary\",\n      responseType: \"blob\"\n    }) //サーバーから音素材の配列を受け取った後，then部分を実行する．\n    .then(function (response) {\n      let mineType = response.headers[\"content-type\"];\n      const name = response.headers[\"content-dispositon\"];\n      const blob = new Blob([response.data], {\n        type: mineType\n      });\n      const tempAudio = new Audio(response);\n      setCount(String(response));\n      setAudio(tempAudio);\n      audio.play();\n    });\n  };\n  useEffect(() => {\n    const canvas1 = document.getElementById('canvas1');\n    const ctx1 = canvas1.getContext('2d');\n    const canvas2 = document.getElementById('canvas2');\n    const ctx2 = canvas2.getContext('2d');\n    setContext1(ctx1);\n    setContext2(ctx2);\n    let array = new Array(1152);\n    for (var i = 0; i < 1152; i++) {\n      array[i] = 250;\n    }\n    setLinesY(array);\n    ctx1.fillStyle = 'green';\n    ctx1.fillStyle = 'black';\n    ctx1.strokeRect(0, 0, canvas1.width, canvas1.height);\n    ctx1.beginPath();\n    for (var i = 0; i < 1151; i++) {\n      ctx1.moveTo(i, 250); //盛り上がり度曲線を描く\n      ctx1.lineTo(i + 1, 250);\n    }\n    ctx1.stroke();\n    ctx1.closePath();\n    setCount(0);\n    ctx2.strokeRect(0, 0, canvas2.width, canvas2.height);\n    for (let i = 0; i < 32; i++) {\n      for (let j = 0; j < 4; j++) {\n        ctx2.strokeRect(i * 36, j * 50, 36, 50);\n      }\n    }\n  }, [dammy]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"count: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        id: \"count\",\n        children: linesY\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"count: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        id: \"count\",\n        children: temps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"count: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        id: \"count\",\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"count: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        id: \"count\",\n        children: numberi\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => playMusic(),\n      children: \"play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => audio.play(),\n      children: \"play1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"asdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      x: \"100\",\n      y: \"100\",\n      width: \"1152\",\n      height: \"280\",\n      id: \"canvas1\",\n      onMouseDown: startDraw,\n      onMouseUp: stopDraw,\n      onMouseMove: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"qwer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: \"1152\",\n      height: \"200\",\n      id: \"canvas2\",\n      onMouseDown: clickRect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"R5qJ2yaXBsi0gE9pweQm/txkbsM=\", false, function () {\n  return [useSound];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useEffect","useRef","useState","axios","useSound","Sound","App","context1","setContext1","audio","setAudio","context2","setContext2","drawing","setDrawing","dammy","setDammy","count","setCount","numberi","setNumberi","temps","setTemp","posX","setPosX","posY","setPosY","linesY","setLinesY","play","stop","pause","startDraw","nativeEvent","offsetX","offsetY","Math","floor","map","pos","index","draw","array","Array","i","difference","abs","clearRect","beginPath","moveTo","lineTo","stroke","closePath","stopDraw","clickRect","posRectX","posRectY","lineWidth","strokeRect","newCount","playMusic","url","get","data","dataType","responseType","then","response","mineType","headers","name","blob","Blob","type","tempAudio","Audio","String","canvas1","document","getElementById","ctx1","getContext","canvas2","ctx2","fillStyle","width","height","j"],"sources":["/home/sclab/renewal/frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport useSound from 'use-sound';\nimport Sound from \"./song0.wav\";\n\nfunction App() {\n  const [context1,setContext1] = useState(null)\n  const [audio, setAudio] = useState(null);\n  const [context2,setContext2] = useState(null)\n  const [drawing, setDrawing] = useState(false);\n  const [dammy, setDammy] = useState(0);\n  const [count, setCount] = useState(0);\n  const [numberi, setNumberi] = useState(0);\n  const [temps, setTemp] = useState(0);\n  const [posX, setPosX] = useState(0);\n  const [posY, setPosY] = useState(0);\n  const [linesY, setLinesY] = useState([])\n  let [play, { stop, pause }] = useSound(Sound);\n  \n  const startDraw = ({ nativeEvent }) => {\n    const { offsetX, offsetY } = nativeEvent;\n\t  setPosX(Math.floor(offsetX));\n    setPosY(Math.floor(offsetY));\n    setLinesY(linesY.map((pos, index) => (index === posX ? posY : pos)))\n    setDrawing(true);\n  };\n\n  const draw = ({ nativeEvent }) => {\n    if(!drawing){return;}\n    const { offsetX, offsetY } = nativeEvent;\n    let array = new Array(1152);\n    for(var i = 0; i < 1152; i++) {\n      array[i] = linesY[i]\n    }\n    array[offsetX] = offsetY;\n    setLinesY(linesY.map((pos, index) => (index === offsetX ? offsetY : pos)))\n    let difference = Math.floor((Math.abs(offsetX - posX)));\n\t\tif(offsetX > posX) {\n\t\t  for(var i = 1; i < difference; i++) {\n        array[posX + i] = Math.floor(posY+(offsetY-posY) * (posX + i - posX) / (offsetX - posX));\n\t\t  }\n\t\t}else {\n\t\t  for(var i = 1; i < difference; i++) {\n        array[posX - i] = Math.floor(posY+(offsetY-posY) * (posX - i - posX) / (offsetX - posX));\n\t\t  }\n\t\t}\n    setLinesY([...array])\n    \n    context1.clearRect(0,1,1151,278);\n    context1.beginPath();\n    for(var i = 0; i < 1151; i++) {\t\t\n      context1.moveTo(i,linesY[i]);          //盛り上がり度曲線を描く．\n      context1.lineTo(i+1,linesY[i+1]);\n    }\n    context1.stroke();\n    context1.closePath();\n    \n    setPosX(Math.floor(offsetX))\n\t  setPosY(Math.floor(offsetY))\n    \n  };\n\n  const stopDraw = () => {\n    setDrawing(false);\n  };\n\n  const clickRect = ({ nativeEvent }) => {\n    const { offsetX, offsetY } = nativeEvent;\n    let posRectX = Math.floor(offsetX/36);\n    let posRectY = Math.floor(offsetY/50);\n    context2.lineWidth = 6;\n    context2.strokeRect(36*posRectX,50*posRectY,36,50);\n    context2.lineWidth = 1;\n    let newCount = posRectX + posRectY;\n    \n    setCount(newCount); \n  };\n\n  const playMusic = () => {\n    const url = \"http://127.0.0.1:5000/projects/0/songs/0/wav\"; \n\n\t  axios.get(url,{data: \"data\", dataType: \"binary\", responseType: \"blob\",})       //サーバーから音素材の配列を受け取った後，then部分を実行する．\n\t    .then(function (response) {\n        let mineType = response.headers[\"content-type\"];\n        const name = response.headers[\"content-dispositon\"]\n        const blob = new Blob([response.data], { type: mineType});\n        const tempAudio = new Audio(response)\n        setCount(String(response))\n        setAudio(tempAudio);\n        audio.play();\n        \n      })\n  }\n\n  useEffect(()=>{\n    const canvas1 = document.getElementById('canvas1');\n    const ctx1 = canvas1.getContext('2d');\n    const canvas2 = document.getElementById('canvas2');\n    const ctx2 = canvas2.getContext('2d');\n    setContext1(ctx1);\n    setContext2(ctx2);\n    let array = new Array(1152);\n    for (var i = 0; i < 1152; i++) {\n      array[i] = 250;\n    }\n    setLinesY(array)\n    ctx1.fillStyle = 'green';\n    ctx1.fillStyle = 'black';\n    ctx1.strokeRect(0,0,canvas1.width,canvas1.height);\n    ctx1.beginPath();\n    for(var i = 0; i < 1151; i++) {\n\t    ctx1.moveTo(i,250);      //盛り上がり度曲線を描く\n\t    ctx1.lineTo(i+1,250);\n\t  }\n    ctx1.stroke();\n\t  ctx1.closePath();\n    setCount(0)\n    ctx2.strokeRect(0,0,canvas2.width,canvas2.height);\n    for(let i = 0; i < 32; i++) {\n      for(let j = 0; j < 4; j++) {\n        ctx2.strokeRect(i*36,j*50,36,50);\n      }\n    }\n  },[dammy]);\n\n  return (\n    <>\n      <p>count: <code id='count'>{linesY}</code></p>\n      <p>count: <code id='count'>{temps}</code></p>\n      <p>count: <code id='count'>{count}</code></p>\n      <p>count: <code id='count'>{numberi}</code></p>\n      <button type=\"button\" onClick={() => playMusic()}>play</button>\n      <button type=\"button\" onClick={() => audio.play()}>play1</button>\n      <h1>asdf</h1>\n      <canvas x=\"100\" y=\"100\" width=\"1152\" height=\"280\" id=\"canvas1\" \n        onMouseDown={startDraw}\n        onMouseUp={stopDraw}\n        onMouseMove={draw}>\n      </canvas>\n      <h1>qwer</h1>\n      <canvas width=\"1152\" height=\"200\" id=\"canvas2\" onMouseDown={clickRect}></canvas>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,KAAK,MAAM,aAAa;AAAC;AAAA;AAEhC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,QAAQ,EAACC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACmB,KAAK,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACpC,MAAM,CAACqB,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACyB,MAAM,EAAEC,SAAS,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACxC,IAAI,CAAC2B,IAAI,EAAE;IAAEC,IAAI;IAAEC;EAAM,CAAC,CAAC,GAAG3B,QAAQ,CAACC,KAAK,CAAC;EAE7C,MAAM2B,SAAS,GAAG,QAAqB;IAAA,IAApB;MAAEC;IAAY,CAAC;IAChC,MAAM;MAAEC,OAAO;MAAEC;IAAQ,CAAC,GAAGF,WAAW;IACzCT,OAAO,CAACY,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC,CAAC;IAC3BR,OAAO,CAACU,IAAI,CAACC,KAAK,CAACF,OAAO,CAAC,CAAC;IAC5BP,SAAS,CAACD,MAAM,CAACW,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAMA,KAAK,KAAKjB,IAAI,GAAGE,IAAI,GAAGc,GAAI,CAAC,CAAC;IACpEzB,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,MAAM2B,IAAI,GAAG,SAAqB;IAAA,IAApB;MAAER;IAAY,CAAC;IAC3B,IAAG,CAACpB,OAAO,EAAC;MAAC;IAAO;IACpB,MAAM;MAAEqB,OAAO;MAAEC;IAAQ,CAAC,GAAGF,WAAW;IACxC,IAAIS,KAAK,GAAG,IAAIC,KAAK,CAAC,IAAI,CAAC;IAC3B,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,EAAEA,CAAC,EAAE,EAAE;MAC5BF,KAAK,CAACE,CAAC,CAAC,GAAGjB,MAAM,CAACiB,CAAC,CAAC;IACtB;IACAF,KAAK,CAACR,OAAO,CAAC,GAAGC,OAAO;IACxBP,SAAS,CAACD,MAAM,CAACW,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAMA,KAAK,KAAKN,OAAO,GAAGC,OAAO,GAAGI,GAAI,CAAC,CAAC;IAC1E,IAAIM,UAAU,GAAGT,IAAI,CAACC,KAAK,CAAED,IAAI,CAACU,GAAG,CAACZ,OAAO,GAAGX,IAAI,CAAC,CAAE;IACzD,IAAGW,OAAO,GAAGX,IAAI,EAAE;MACjB,KAAI,IAAIqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,UAAU,EAAED,CAAC,EAAE,EAAE;QAChCF,KAAK,CAACnB,IAAI,GAAGqB,CAAC,CAAC,GAAGR,IAAI,CAACC,KAAK,CAACZ,IAAI,GAAC,CAACU,OAAO,GAACV,IAAI,KAAKF,IAAI,GAAGqB,CAAC,GAAGrB,IAAI,CAAC,IAAIW,OAAO,GAAGX,IAAI,CAAC,CAAC;MAC5F;IACF,CAAC,MAAK;MACJ,KAAI,IAAIqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,UAAU,EAAED,CAAC,EAAE,EAAE;QAChCF,KAAK,CAACnB,IAAI,GAAGqB,CAAC,CAAC,GAAGR,IAAI,CAACC,KAAK,CAACZ,IAAI,GAAC,CAACU,OAAO,GAACV,IAAI,KAAKF,IAAI,GAAGqB,CAAC,GAAGrB,IAAI,CAAC,IAAIW,OAAO,GAAGX,IAAI,CAAC,CAAC;MAC5F;IACF;IACEK,SAAS,CAAC,CAAC,GAAGc,KAAK,CAAC,CAAC;IAErBnC,QAAQ,CAACwC,SAAS,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,GAAG,CAAC;IAChCxC,QAAQ,CAACyC,SAAS,EAAE;IACpB,KAAI,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,EAAEA,CAAC,EAAE,EAAE;MAC5BrC,QAAQ,CAAC0C,MAAM,CAACL,CAAC,EAACjB,MAAM,CAACiB,CAAC,CAAC,CAAC,CAAC,CAAU;MACvCrC,QAAQ,CAAC2C,MAAM,CAACN,CAAC,GAAC,CAAC,EAACjB,MAAM,CAACiB,CAAC,GAAC,CAAC,CAAC,CAAC;IAClC;IACArC,QAAQ,CAAC4C,MAAM,EAAE;IACjB5C,QAAQ,CAAC6C,SAAS,EAAE;IAEpB5B,OAAO,CAACY,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC,CAAC;IAC7BR,OAAO,CAACU,IAAI,CAACC,KAAK,CAACF,OAAO,CAAC,CAAC;EAE7B,CAAC;EAED,MAAMkB,QAAQ,GAAG,MAAM;IACrBvC,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMwC,SAAS,GAAG,SAAqB;IAAA,IAApB;MAAErB;IAAY,CAAC;IAChC,MAAM;MAAEC,OAAO;MAAEC;IAAQ,CAAC,GAAGF,WAAW;IACxC,IAAIsB,QAAQ,GAAGnB,IAAI,CAACC,KAAK,CAACH,OAAO,GAAC,EAAE,CAAC;IACrC,IAAIsB,QAAQ,GAAGpB,IAAI,CAACC,KAAK,CAACF,OAAO,GAAC,EAAE,CAAC;IACrCxB,QAAQ,CAAC8C,SAAS,GAAG,CAAC;IACtB9C,QAAQ,CAAC+C,UAAU,CAAC,EAAE,GAACH,QAAQ,EAAC,EAAE,GAACC,QAAQ,EAAC,EAAE,EAAC,EAAE,CAAC;IAClD7C,QAAQ,CAAC8C,SAAS,GAAG,CAAC;IACtB,IAAIE,QAAQ,GAAGJ,QAAQ,GAAGC,QAAQ;IAElCtC,QAAQ,CAACyC,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMC,SAAS,GAAG,MAAM;IACtB,MAAMC,GAAG,GAAG,8CAA8C;IAE3D1D,KAAK,CAAC2D,GAAG,CAACD,GAAG,EAAC;MAACE,IAAI,EAAE,MAAM;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,YAAY,EAAE;IAAO,CAAC,CAAC,CAAO;IAAA,CAC5EC,IAAI,CAAC,UAAUC,QAAQ,EAAE;MACvB,IAAIC,QAAQ,GAAGD,QAAQ,CAACE,OAAO,CAAC,cAAc,CAAC;MAC/C,MAAMC,IAAI,GAAGH,QAAQ,CAACE,OAAO,CAAC,oBAAoB,CAAC;MACnD,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACL,QAAQ,CAACJ,IAAI,CAAC,EAAE;QAAEU,IAAI,EAAEL;MAAQ,CAAC,CAAC;MACzD,MAAMM,SAAS,GAAG,IAAIC,KAAK,CAACR,QAAQ,CAAC;MACrCjD,QAAQ,CAAC0D,MAAM,CAACT,QAAQ,CAAC,CAAC;MAC1BzD,QAAQ,CAACgE,SAAS,CAAC;MACnBjE,KAAK,CAACoB,IAAI,EAAE;IAEd,CAAC,CAAC;EACN,CAAC;EAED7B,SAAS,CAAC,MAAI;IACZ,MAAM6E,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;IAClD,MAAMC,IAAI,GAAGH,OAAO,CAACI,UAAU,CAAC,IAAI,CAAC;IACrC,MAAMC,OAAO,GAAGJ,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;IAClD,MAAMI,IAAI,GAAGD,OAAO,CAACD,UAAU,CAAC,IAAI,CAAC;IACrCzE,WAAW,CAACwE,IAAI,CAAC;IACjBpE,WAAW,CAACuE,IAAI,CAAC;IACjB,IAAIzC,KAAK,GAAG,IAAIC,KAAK,CAAC,IAAI,CAAC;IAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,EAAEA,CAAC,EAAE,EAAE;MAC7BF,KAAK,CAACE,CAAC,CAAC,GAAG,GAAG;IAChB;IACAhB,SAAS,CAACc,KAAK,CAAC;IAChBsC,IAAI,CAACI,SAAS,GAAG,OAAO;IACxBJ,IAAI,CAACI,SAAS,GAAG,OAAO;IACxBJ,IAAI,CAACtB,UAAU,CAAC,CAAC,EAAC,CAAC,EAACmB,OAAO,CAACQ,KAAK,EAACR,OAAO,CAACS,MAAM,CAAC;IACjDN,IAAI,CAAChC,SAAS,EAAE;IAChB,KAAI,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,EAAEA,CAAC,EAAE,EAAE;MAC7BoC,IAAI,CAAC/B,MAAM,CAACL,CAAC,EAAC,GAAG,CAAC,CAAC,CAAM;MACzBoC,IAAI,CAAC9B,MAAM,CAACN,CAAC,GAAC,CAAC,EAAC,GAAG,CAAC;IACtB;IACCoC,IAAI,CAAC7B,MAAM,EAAE;IACd6B,IAAI,CAAC5B,SAAS,EAAE;IACflC,QAAQ,CAAC,CAAC,CAAC;IACXiE,IAAI,CAACzB,UAAU,CAAC,CAAC,EAAC,CAAC,EAACwB,OAAO,CAACG,KAAK,EAACH,OAAO,CAACI,MAAM,CAAC;IACjD,KAAI,IAAI1C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC1B,KAAI,IAAI2C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QACzBJ,IAAI,CAACzB,UAAU,CAACd,CAAC,GAAC,EAAE,EAAC2C,CAAC,GAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC;MAClC;IACF;EACF,CAAC,EAAC,CAACxE,KAAK,CAAC,CAAC;EAEV,oBACE;IAAA,wBACE;MAAA,WAAG,SAAO;QAAM,EAAE,EAAC,OAAO;QAAA,UAAEY;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,eAC9C;MAAA,WAAG,SAAO;QAAM,EAAE,EAAC,OAAO;QAAA,UAAEN;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,eAC7C;MAAA,WAAG,SAAO;QAAM,EAAE,EAAC,OAAO;QAAA,UAAEJ;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,eAC7C;MAAA,WAAG,SAAO;QAAM,EAAE,EAAC,OAAO;QAAA,UAAEE;MAAO;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,eAC/C;MAAQ,IAAI,EAAC,QAAQ;MAAC,OAAO,EAAE,MAAMyC,SAAS,EAAG;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS,eAC/D;MAAQ,IAAI,EAAC,QAAQ;MAAC,OAAO,EAAE,MAAMnD,KAAK,CAACoB,IAAI,EAAG;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eACjE;MAAA,UAAI;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK,eACb;MAAQ,CAAC,EAAC,KAAK;MAAC,CAAC,EAAC,KAAK;MAAC,KAAK,EAAC,MAAM;MAAC,MAAM,EAAC,KAAK;MAAC,EAAE,EAAC,SAAS;MAC5D,WAAW,EAAEG,SAAU;MACvB,SAAS,EAAEqB,QAAS;MACpB,WAAW,EAAEZ;IAAK;MAAA;MAAA;MAAA;IAAA,QACX,eACT;MAAA,UAAI;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK,eACb;MAAQ,KAAK,EAAC,MAAM;MAAC,MAAM,EAAC,KAAK;MAAC,EAAE,EAAC,SAAS;MAAC,WAAW,EAAEa;IAAU;MAAA;MAAA;MAAA;IAAA,QAAU;EAAA,gBAC/E;AAEP;AAAC,GA1IQhD,GAAG;EAAA,QAYoBF,QAAQ;AAAA;AAAA,KAZ/BE,GAAG;AA4IZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}