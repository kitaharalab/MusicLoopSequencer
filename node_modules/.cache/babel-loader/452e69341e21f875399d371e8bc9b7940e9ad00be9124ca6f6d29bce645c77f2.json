{"ast":null,"code":"var _jsxFileName = \"/home/sclab/renewal/frontend/src/ExcitementCurve.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExcitementCurve() {\n  const startDraw = _ref => {\n    let {\n      nativeEvent\n    } = _ref;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    setPosX(Math.floor(offsetX));\n    setPosY(Math.floor(offsetY));\n    setLinesY(linesY.map((pos, index) => index === posX ? posY : pos));\n    setDrawing(true);\n  };\n  const draw = _ref2 => {\n    let {\n      nativeEvent\n    } = _ref2;\n    if (!drawing) {\n      return;\n    }\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    let array = new Array(1152);\n    for (var i = 0; i < 1152; i++) {\n      array[i] = linesY[i];\n    }\n    array[offsetX] = offsetY;\n    setLinesY(linesY.map((pos, index) => index === offsetX ? offsetY : pos));\n    let difference = Math.floor(Math.abs(offsetX - posX));\n    if (offsetX > posX) {\n      for (var i = 1; i < difference; i++) {\n        array[posX + i] = Math.floor(posY + (offsetY - posY) * (posX + i - posX) / (offsetX - posX));\n      }\n    } else {\n      for (var i = 1; i < difference; i++) {\n        array[posX - i] = Math.floor(posY + (offsetY - posY) * (posX - i - posX) / (offsetX - posX));\n      }\n    }\n    setLinesY([...array]);\n    context1.clearRect(0, 1, 1151, 278);\n    context1.strokeStyle = \"gray\";\n    for (let i = 0; i < 32; i++) {\n      for (let j = 0; j < 5; j++) {\n        context1.strokeRect(36 * i, 56 * j, 36, 56);\n      }\n    }\n    context1.lineWidth = \"3\";\n    context1.strokeStyle = \"blue\";\n    context1.beginPath();\n    for (var i = 0; i < 1151; i++) {\n      context1.moveTo(i, linesY[i]); //盛り上がり度曲線を描く．\n      context1.lineTo(i + 1, linesY[i + 1]);\n    }\n    context1.stroke();\n    context1.closePath();\n    context1.lineWidth = \"1\";\n    context1.strokeStyle = \"black\";\n    setPosX(Math.floor(offsetX));\n    setPosY(Math.floor(offsetY));\n  };\n  const stopDraw = () => {\n    setDrawing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    style: style1,\n    width: \"1152\",\n    height: \"280\",\n    id: \"canvas1\",\n    onMouseDown: startDraw,\n    onMouseUp: stopDraw,\n    onMouseMove: draw\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_c = ExcitementCurve;\nvar _c;\n$RefreshReg$(_c, \"ExcitementCurve\");","map":{"version":3,"names":["ExcitementCurve","startDraw","nativeEvent","offsetX","offsetY","setPosX","Math","floor","setPosY","setLinesY","linesY","map","pos","index","posX","posY","setDrawing","draw","drawing","array","Array","i","difference","abs","context1","clearRect","strokeStyle","j","strokeRect","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","stopDraw","style1"],"sources":["/home/sclab/renewal/frontend/src/ExcitementCurve.jsx"],"sourcesContent":["\nexport default function ExcitementCurve() {\n    const startDraw = ({ nativeEvent }) => {\n        const { offsetX, offsetY } = nativeEvent;\n        setPosX(Math.floor(offsetX));\n        setPosY(Math.floor(offsetY));\n        setLinesY(linesY.map((pos, index) => (index === posX ? posY : pos)))\n        setDrawing(true);\n    };\n\n    const draw = ({ nativeEvent }) => {\n        if (!drawing) { return; }\n        const { offsetX, offsetY } = nativeEvent;\n        let array = new Array(1152);\n        for (var i = 0; i < 1152; i++) {\n            array[i] = linesY[i]\n        }\n        array[offsetX] = offsetY;\n        setLinesY(linesY.map((pos, index) => (index === offsetX ? offsetY : pos)))\n        let difference = Math.floor((Math.abs(offsetX - posX)));\n        if (offsetX > posX) {\n            for (var i = 1; i < difference; i++) {\n                array[posX + i] = Math.floor(posY + (offsetY - posY) * (posX + i - posX) / (offsetX - posX));\n            }\n        } else {\n            for (var i = 1; i < difference; i++) {\n                array[posX - i] = Math.floor(posY + (offsetY - posY) * (posX - i - posX) / (offsetX - posX));\n            }\n        }\n        setLinesY([...array])\n\n        context1.clearRect(0, 1, 1151, 278);\n        context1.strokeStyle = \"gray\"\n        for (let i = 0; i < 32; i++) {\n            for (let j = 0; j < 5; j++) {\n                context1.strokeRect(36 * i, 56 * j, 36, 56);\n            }\n        }\n        context1.lineWidth = \"3\";\n        context1.strokeStyle = \"blue\"\n        context1.beginPath();\n        for (var i = 0; i < 1151; i++) {\n            context1.moveTo(i, linesY[i]);          //盛り上がり度曲線を描く．\n            context1.lineTo(i + 1, linesY[i + 1]);\n        }\n        context1.stroke();\n        context1.closePath();\n\n        context1.lineWidth = \"1\"\n        context1.strokeStyle = \"black\"\n\n        setPosX(Math.floor(offsetX))\n        setPosY(Math.floor(offsetY))\n\n    };\n\n    const stopDraw = () => {\n        setDrawing(false);\n    };\n    return (\n        <canvas style={style1} width=\"1152\" height=\"280\" id=\"canvas1\"\n            onMouseDown={startDraw}\n            onMouseUp={stopDraw}\n            onMouseMove={draw}>\n        </canvas>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}